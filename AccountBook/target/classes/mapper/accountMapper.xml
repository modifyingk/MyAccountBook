<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="accountMapper">
	<!-- 카테고리 추가 -->
	<insert id="insertAccount" parameterType="accountVO">
		insert into account values (#{accountid}, #{moneytype}, #{date}, #{astname}, #{catename}, #{content}, #{total}, #{memo}, #{userid});
	</insert>
	
	<!-- 수입/지출 내역 수정 -->
	<update id="updateAccount" parameterType="accountVO">
		update account set moneytype = #{moneytype}, date = #{date}, astname = #{astname}, catename = #{catename}, content = #{content}, total = #{total}, memo = #{memo} where userid = #{userid} and accountid = #{accountid};
	</update>
	
	<!-- 수입/지출 내역 삭제 -->
	<delete id="deleteAccount" parameterType="accountVO">
		delete from account where accountid = #{accountid} and userid = #{userid};
	</delete>
	
	<!-- 즐겨찾는 지출 내역 중복 없이 가져오기 -->
	<select id="addBookmarkInfo" parameterType="String" resultType="accountVO">
		select distinct catename, content, total from account where userid = #{userid} and moneytype = "지출";
	</select>
	
	<!-- 월별 수입/지출 내역 -->
	<select id="monthAccount" parameterType="accountVO" resultType="accountVO">
		select * from account where userid = #{userid} and left(date, 7) = #{date} order by date desc;
	</select>
	
	<!-- 월별 수입 내역 -->
	<select id="monthIncome" parameterType="accountVO" resultType="accountVO">
		select * from account where userid = #{userid} and left(date, 7) = #{date} and moneytype = "수입" order by date desc;
	</select>
	
	<!-- 월별 지출 내역 -->
	<select id="monthSpend" parameterType="accountVO" resultType="accountVO">
		select * from account where userid = #{userid} and left(date, 7) = #{date} and moneytype = "지출" order by date desc;
	</select>
	
	<!-- 해당 월의 카테고리별 수입/지출 내역 -->
	<select id="monthCateList" parameterType="accountVO" resultType="accountVO">
		select * from account where userid = #{userid} and left(date, 7) = #{date} and catename = #{catename} and moneytype = #{moneytype} order by date desc;
	</select>
	
	<!-- 자산별 내역 -->
	<select id="assetAccount" parameterType="accountVO" resultType="accountVO">
		select * from account where userid = #{userid} and astname = #{astname} and left(date, 7) = #{date} order by date desc;
	</select>
	
	<!-- 달력에 표시할 날짜별 합계 -->
	<select id="calendarTotal" parameterType="accountVO" resultType="accountVO">
		select date, moneytype, sum(total) as total from account where left(date, 7) = #{date} and userid= #{userid} group by date, moneytype order by date;
	</select>
	
	<!-- 해당 날짜의 내역 -->
	<select id="dateAccount" parameterType="accountVO" resultType="accountVO">
		select * from account where date = #{date} and userid = #{userid};
	</select>
	
	<!-- accountid 값으로 검색 -->
	<select id="accountidInfo" parameterType="accountVO" resultType="accountVO">
		select * from account where accountid = #{accountid} and userid = #{userid};
	</select>
</mapper>