<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="accountMapper">
	<!-- 수입/지출 추가 -->
	<insert id="insertAccount" parameterType="accountVO">
		insert into account values (#{accountid}, #{moneytype}, #{date}, #{assetname}, #{bigcate}, #{smallcate}, #{content}, #{total}, #{userid});
		<selectKey keyProperty="accountid" resultType="int" order="AFTER">
			select MAX(accountid) from account;
		</selectKey>
	</insert>
	
	<!-- 수입/지출 내역 -->
	<select id="selectAccount" parameterType="accountVO" resultType="accountVO">
		select * from account where left(date, 6) = #{date} and userid = #{userid} order by date desc;
	</select>
	
	<!-- 수입/지출 수정 -->
	<update id="updateAccount" parameterType="accountVO">
		update account set moneytype = #{moneytype}, date = #{date}, assetname = #{assetname}, bigcate = #{bigcate}, smallcate = #{smallcate}, content = #{content}, total = #{total} where userid = #{userid} and accountid = #{accountid};
	</update>
	
	<!-- 수입/지출 삭제 -->
	<delete id="deleteAccount" parameterType="accountVO">
		delete from account where accountid = #{accountid} and userid = #{userid};
	</delete>
	
	<!-- 업데이트 전 수입/지출 -->
	<select id="beforeAccount" parameterType="accountVO" resultType="accountVO">
		select assetname, total from account where accountid = #{accountid} and userid = #{userid};
	</select>
	
	<!-- 수입/지출 검색 -->
	<select id="searchAccount" parameterType="accountVO" resultType="accountVO">
		select * from account where content like concat('%', #{content}, '%') and userid = #{userid} and left(date, 6) = #{date} order by date desc;
	</select>
	
	<!-- 수입/지출 검색 자동완성 -->
	<select id="autoComplete" parameterType="accountVO" resultType="String">
		select distinct content from account where content like concat('%', #{content}, '%') and userid = #{userid};
	</select>
	
	<!-- 날짜별 합계 -->
	<select id="groupByDate" parameterType="accountVO" resultType="accountVO">
		select date, moneytype, sum(total) as total from account where userid = #{userid} and left(date, 6) = #{date} group by date, moneytype;
	</select>
	
	<!-- 특정 날짜의 수입/지출 내역 -->
	<select id="detailsOfDate" parameterType="accountVO" resultType="accountVO">
		select * from account where date = #{date} and userid = #{userid};
	</select>
	
	<!-- 대분류별 합계 (지출인 경우 양수로 변환)-->
	<select id="groupByBigcate" parameterType="accountVO" resultType="accountVO">
		select moneytype, bigcate, if(moneytype="지출", sum(total)*-1, sum(total)) as total from account
		where userid = #{userid} and left(date, 6)= #{date} and moneytype = #{moneytype} group by bigcate;
	</select>
	
	<!-- 특정 대분류의 수입/지출 내역 -->
	<select id="detailsOfBigcate" parameterType="accountVO" resultType="accountVO">
		select * from account where userid = #{userid} and left(date, 6)= #{date} and moneytype = #{moneytype} and bigcate = #{bigcate} order by date desc;
	</select>
	
	<!-- 소분류별 합계 (지출인 경우 양수로 변환)-->
	<select id="groupBySmallcate" parameterType="accountVO" resultType="accountVO">
		select if(smallcate="", "분류없음", smallcate) as smallcate, if(moneytype="지출", sum(total)*-1, sum(total)) as total from account
		where userid = #{userid} and left(date, 6)= #{date} and moneytype = #{moneytype} and bigcate = #{bigcate} group by smallcate;
	</select>

	<!-- 특정 소분류의 수입/지출 내역 -->
	<select id="detailsOfSmallcate" parameterType="accountVO" resultType="accountVO">
		select * from account where userid = #{userid} and left(date, 6)= #{date} and moneytype = #{moneytype} and bigcate = #{bigcate} and smallcate = #{smallcate} order by date desc;
	</select>
	
	<!-- 자산별 합계 -->
	<select id="groupByAsset" parameterType="accountVO" resultType="accountVO">
		select moneytype, assetname, if(moneytype="지출", sum(total)*-1, sum(total)) as total from account
		where userid = #{userid} and left(date, 6)= #{date} and moneytype = #{moneytype} group by assetname;
	</select>
	
	<!-- 특정 자산의 수입/지출 내역 -->
	<select id="detailsOfAsset" parameterType="accountVO" resultType="accountVO">
		select * from account where userid = #{userid} and left(date, 6)= #{date} and moneytype = #{moneytype} and assetname = #{assetname} order by date desc;
	</select>
	
	<!-- 이체 수정 -->
	<update id="updateTransfer" parameterType="accountVO">
		update account set date = #{date}, assetname = #{assetname}, content = #{content}, total = #{total} where userid = #{userid} and accountid = #{accountid};
	</update>
	
	<!-- 이번 달 수입/지출 합계 -->
	<select id="monthAccount" parameterType="accountVO" resultType="accountVO">
		select moneytype, sum(total) as total from account where userid = #{userid} and left(date, 6) = #{date} and moneytype != "이체" group by moneytype;
	</select>
	
	<!-- 최근 수입/지출 합계 -->
	<select id="recentAccount" parameterType="accountVO" resultType="accountVO">
		<![CDATA[
		select date, total from
		(select row_number() over (order by date desc) as rownum, left(date, 6) as date, if(moneytype = "지출", sum(total) * -1, sum(total)) as total
		from account where moneytype = #{moneytype} and date < #{date} and userid = #{userid} group by left(date, 6)) as rownum_table
		where rownum < 4 order by date; ]]>
	</select>
</mapper>